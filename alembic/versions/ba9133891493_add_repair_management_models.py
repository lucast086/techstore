"""Add repair management models

Revision ID: ba9133891493
Revises: 7261946b8413
Create Date: 2025-08-01 02:06:50.623090

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ba9133891493'
down_revision: Union[str, Sequence[str], None] = '7261946b8413'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repairs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Unique repair ID'),
    sa.Column('repair_number', sa.String(length=20), nullable=False, comment='Unique repair order number'),
    sa.Column('customer_id', sa.Integer(), nullable=False, comment='Customer ID'),
    sa.Column('device_type', sa.String(length=50), nullable=False, comment='Type of device (phone, laptop, etc)'),
    sa.Column('device_brand', sa.String(length=50), nullable=False, comment='Device brand'),
    sa.Column('device_model', sa.String(length=100), nullable=True, comment='Device model'),
    sa.Column('serial_number', sa.String(length=100), nullable=True, comment='Device serial number'),
    sa.Column('problem_description', sa.Text(), nullable=False, comment='Description of the problem'),
    sa.Column('device_condition', sa.Text(), nullable=True, comment='Physical condition notes'),
    sa.Column('accessories_received', sa.Text(), nullable=True, comment='List of accessories received'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Current repair status'),
    sa.Column('diagnosis_notes', sa.Text(), nullable=True, comment="Technician's diagnosis"),
    sa.Column('repair_notes', sa.Text(), nullable=True, comment='Notes about repair work'),
    sa.Column('estimated_cost', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Estimated repair cost'),
    sa.Column('final_cost', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Final repair cost'),
    sa.Column('labor_cost', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Labor cost component'),
    sa.Column('parts_cost', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Parts cost component'),
    sa.Column('received_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='When repair was received'),
    sa.Column('estimated_completion', sa.Date(), nullable=True, comment='Estimated completion date'),
    sa.Column('completed_date', sa.DateTime(timezone=True), nullable=True, comment='Actual completion timestamp'),
    sa.Column('delivered_date', sa.DateTime(timezone=True), nullable=True, comment='When device was delivered'),
    sa.Column('warranty_days', sa.Integer(), nullable=False, comment='Warranty period in days'),
    sa.Column('warranty_expires', sa.Date(), nullable=True, comment='Warranty expiration date'),
    sa.Column('assigned_technician', sa.Integer(), nullable=True, comment='Assigned technician ID'),
    sa.Column('received_by', sa.Integer(), nullable=True, comment='User who received the repair'),
    sa.Column('delivered_by', sa.Integer(), nullable=True, comment='User who delivered the device'),
    sa.Column('is_express', sa.Boolean(), nullable=False, comment='Express/session repair flag'),
    sa.Column('customer_approved', sa.Boolean(), nullable=False, comment='Customer approval flag'),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True, comment='When customer approved'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['assigned_technician'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['delivered_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['received_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_repairs_customer', 'repairs', ['customer_id'], unique=False)
    op.create_index('idx_repairs_number', 'repairs', ['repair_number'], unique=False)
    op.create_index('idx_repairs_received', 'repairs', ['received_date'], unique=False)
    op.create_index('idx_repairs_status', 'repairs', ['status'], unique=False)
    op.create_index(op.f('ix_repairs_received_date'), 'repairs', ['received_date'], unique=False)
    op.create_index(op.f('ix_repairs_repair_number'), 'repairs', ['repair_number'], unique=True)
    op.create_index(op.f('ix_repairs_status'), 'repairs', ['status'], unique=False)
    op.create_table('repairparts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Unique part usage ID'),
    sa.Column('repair_id', sa.Integer(), nullable=False, comment='Related repair ID'),
    sa.Column('part_name', sa.String(length=200), nullable=False, comment='Part name/description'),
    sa.Column('part_cost', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Cost of the part'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Quantity used'),
    sa.Column('supplier', sa.String(length=100), nullable=True, comment='Part supplier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repairphotos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Unique photo ID'),
    sa.Column('repair_id', sa.Integer(), nullable=False, comment='Related repair ID'),
    sa.Column('uploaded_by', sa.Integer(), nullable=True, comment='User who uploaded photo'),
    sa.Column('photo_url', sa.String(length=500), nullable=False, comment='Photo URL/path'),
    sa.Column('photo_type', sa.String(length=20), nullable=True, comment='Photo type (before/during/after)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Photo description'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repairstatushistorys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Unique status history ID'),
    sa.Column('repair_id', sa.Integer(), nullable=False, comment='Related repair ID'),
    sa.Column('changed_by', sa.Integer(), nullable=True, comment='User who changed status'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Status value'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Status change notes'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_repair_status_history_repair', 'repairstatushistorys', ['repair_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_repair_status_history_repair', table_name='repairstatushistorys')
    op.drop_table('repairstatushistorys')
    op.drop_table('repairphotos')
    op.drop_table('repairparts')
    op.drop_index(op.f('ix_repairs_status'), table_name='repairs')
    op.drop_index(op.f('ix_repairs_repair_number'), table_name='repairs')
    op.drop_index(op.f('ix_repairs_received_date'), table_name='repairs')
    op.drop_index('idx_repairs_status', table_name='repairs')
    op.drop_index('idx_repairs_received', table_name='repairs')
    op.drop_index('idx_repairs_number', table_name='repairs')
    op.drop_index('idx_repairs_customer', table_name='repairs')
    op.drop_table('repairs')
    # ### end Alembic commands ###
