"""add_system_config_table_for_settings

Revision ID: db1b8739bca5
Revises: f2a1d59e94ef
Create Date: 2025-08-23 03:55:17.581311

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'db1b8739bca5'
down_revision: Union[str, Sequence[str], None] = 'f2a1d59e94ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False, comment='Unique configuration key'),
    sa.Column('value', sa.Text(), nullable=False, comment='Configuration value (stored as string)'),
    sa.Column('value_type', sa.String(length=20), nullable=False, comment='Type of value: string, decimal, integer, boolean'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description of what this configuration does'),
    sa.Column('category', sa.String(length=50), nullable=True, comment='Category for grouping settings'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether this configuration is active'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', name='uq_system_config_key')
    )
    op.create_index(op.f('ix_system_configs_category'), 'system_configs', ['category'], unique=False)
    op.create_index(op.f('ix_system_configs_id'), 'system_configs', ['id'], unique=False)
    op.create_index(op.f('ix_system_configs_key'), 'system_configs', ['key'], unique=True)
    # ### end Alembic commands ###

    # Insert default configurations
    from datetime import datetime
    system_configs = sa.table('system_configs',
        sa.column('key', sa.String),
        sa.column('value', sa.Text),
        sa.column('value_type', sa.String),
        sa.column('description', sa.Text),
        sa.column('category', sa.String),
        sa.column('is_active', sa.Boolean),
        sa.column('created_at', sa.DateTime),
        sa.column('updated_at', sa.DateTime)
    )

    op.bulk_insert(system_configs, [
        {
            'key': 'default_opening_balance',
            'value': '10000.00',
            'value_type': 'decimal',
            'description': 'Default opening balance for cash register',
            'category': 'cash_register',
            'is_active': True,
            'created_at': datetime.now(),
            'updated_at': datetime.now()
        },
        {
            'key': 'cash_difference_threshold',
            'value': '100.00',
            'value_type': 'decimal',
            'description': 'Maximum acceptable cash difference for closing',
            'category': 'cash_register',
            'is_active': True,
            'created_at': datetime.now(),
            'updated_at': datetime.now()
        },
    ])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_system_configs_key'), table_name='system_configs')
    op.drop_index(op.f('ix_system_configs_id'), table_name='system_configs')
    op.drop_index(op.f('ix_system_configs_category'), table_name='system_configs')
    op.drop_table('system_configs')
    # ### end Alembic commands ###
