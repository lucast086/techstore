"""Add cash_closing table for daily cash management

Revision ID: ccc3657c6dfc
Revises: ba9133891493
Create Date: 2025-08-02 02:59:35.501175

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ccc3657c6dfc'
down_revision: Union[str, Sequence[str], None] = 'ba9133891493'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cash_closings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('closing_date', sa.Date(), nullable=False, comment='Date of the closing'),
    sa.Column('opening_balance', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Opening cash balance'),
    sa.Column('sales_total', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Total sales for the day'),
    sa.Column('expenses_total', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Total expenses'),
    sa.Column('cash_count', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Actual cash counted'),
    sa.Column('expected_cash', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Expected cash balance'),
    sa.Column('cash_difference', sa.DECIMAL(precision=10, scale=2), nullable=False, comment='Difference (actual - expected)'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Closing notes or observations'),
    sa.Column('closed_by', sa.Integer(), nullable=False, comment='User who closed'),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=False, comment='Closing time'),
    sa.Column('is_finalized', sa.Boolean(), nullable=False, comment='Whether closing is final'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['closed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('closing_date', name='uq_cash_closing_date')
    )
    op.create_index(op.f('ix_cash_closings_closing_date'), 'cash_closings', ['closing_date'], unique=False)
    op.create_index(op.f('ix_cash_closings_id'), 'cash_closings', ['id'], unique=False)
    op.create_table('warranties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repair_id', sa.Integer(), nullable=False),
    sa.Column('warranty_number', sa.String(length=20), nullable=False),
    sa.Column('coverage_type', sa.Enum('FULL', 'PARTS_ONLY', 'LABOR_ONLY', 'LIMITED', name='coveragetype'), nullable=False),
    sa.Column('parts_warranty_days', sa.Integer(), nullable=False),
    sa.Column('labor_warranty_days', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('parts_expiry_date', sa.Date(), nullable=False),
    sa.Column('labor_expiry_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'CLAIMED', 'VOIDED', name='warrantystatus'), nullable=False),
    sa.Column('void_reason', sa.Text(), nullable=True),
    sa.Column('voided_at', sa.DateTime(), nullable=True),
    sa.Column('voided_by', sa.Integer(), nullable=True),
    sa.Column('terms', sa.Text(), nullable=True),
    sa.Column('exclusions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['voided_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warranties_warranty_number'), 'warranties', ['warranty_number'], unique=True)
    op.create_table('warranty_claims',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('warranty_id', sa.Integer(), nullable=False),
    sa.Column('repair_id', sa.Integer(), nullable=False),
    sa.Column('claim_number', sa.String(length=20), nullable=False),
    sa.Column('claim_date', sa.Date(), nullable=False),
    sa.Column('issue_description', sa.Text(), nullable=False),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('parts_covered', sa.Boolean(), nullable=True),
    sa.Column('labor_covered', sa.Boolean(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ),
    sa.ForeignKeyConstraint(['warranty_id'], ['warranties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warranty_claims_claim_number'), 'warranty_claims', ['claim_number'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_warranty_claims_claim_number'), table_name='warranty_claims')
    op.drop_table('warranty_claims')
    op.drop_index(op.f('ix_warranties_warranty_number'), table_name='warranties')
    op.drop_table('warranties')
    op.drop_index(op.f('ix_cash_closings_id'), table_name='cash_closings')
    op.drop_index(op.f('ix_cash_closings_closing_date'), table_name='cash_closings')
    op.drop_table('cash_closings')
    # ### end Alembic commands ###
